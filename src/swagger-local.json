{
  "swagger": "2.0",
  "info": {
    "title": "Spruce Moose API",
    "description": "ðŸŒ² SPRUCE MOOSE ðŸŒ²",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Plants",
      "description": "CRUD operations regarding the Plant Model."
    },
    {
      "name": "Users",
      "description": "CRUD operations regarding the User Model."
    },
    {
      "name": "Cart",
      "description": "CRUD operations for interacting with a user's shopping cart."
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "auth0": {
      "type": "oauth2",
      "authorizationUrl": "http://localhost:8080/login",
      "flow": "authorizationCode"
    }
  },
  "paths": {
    "/logout": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new user.",
        "description": "",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Please only add your firstName and lastName when calling this endpoint.",
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created. You will receive the new user id.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "a random string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Failed to create a new user. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get your user data when you are logged in and your user is created.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Able to retrieve your data. You will receive your user object.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "400": {
            "description": "Failed to retrieve your user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Modify your user object",
        "description": "",
        "parameters": [
          {
            "name": "Update Data",
            "in": "body",
            "description": "Please only modify your firstName and lastName when calling this endpoint.",
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Able to update your data. You will receive your new user object.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update your user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "You can delete your user data in the database.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Able to delete your data. You will receive a 200 status code but no json data."
          },
          "400": {
            "description": "Failed to delete your user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a specific user data using the userId.",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Able to retrieve user data. You will receive an user object.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "400": {
            "description": "Failed to retrieve the user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/plant/": {
      "get": {
        "tags": [
          "Plants"
        ],
        "summary": "Gets all plants.",
        "description": "",
        "operationId": "getAllPlants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Plants"
        ],
        "summary": "Add plant to the store.",
        "description": "",
        "operationId": "addPlant",
        "parameters": [
          {
            "name": "plant",
            "in": "body",
            "description": "Plant interface",
            "required": true,
            "schema": {
              "$ref": "#/definitions/plant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/plant/{plantId}": {
      "get": {
        "tags": [
          "Plants"
        ],
        "summary": "Gets plant by ID.",
        "description": "",
        "operationId": "getPlantById",
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Plants"
        ],
        "summary": "Update plant to the store.",
        "description": "",
        "operationId": "updatePlant",
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "plant",
            "in": "body",
            "description": "Plant interface",
            "required": true,
            "schema": {
              "$ref": "#/definitions/plant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Plants"
        ],
        "summary": "Delete plant at the store.",
        "description": "",
        "operationId": "deletePlant",
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cart/": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get the logged-in user's shopping cart.",
        "description": "",
        "operationId": "getCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Clear the cart, removing all items in it.",
        "description": "",
        "operationId": "clearCart",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Update or set an item's quantity in the cart.",
        "description": "If the plantId does not yet exist in the cart, this will add it with the quantity specified.",
        "operationId": "editCart",
        "parameters": [
          {
            "name": "cartEntry",
            "in": "body",
            "description": "Updated cart entry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cartEntry"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/cart/{plantId}": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add an item to the cart.",
        "description": "",
        "operationId": "addToCart",
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the plant being added to cart"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "string"
        },
        "firstName": {
          "type": "string",
          "example": "string"
        },
        "lastName": {
          "type": "string",
          "example": "string"
        },
        "userLevel": {
          "type": "number",
          "example": 3
        },
        "tokenData": {
          "type": "object",
          "properties": {}
        },
        "cart": {
          "type": "object",
          "properties": {}
        },
        "orders": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "newUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "string"
        },
        "lastName": {
          "type": "string",
          "example": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "string"
        },
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "string"
            }
          }
        }
      },
      "required": [
        "message"
      ]
    },
    "plant": {
      "type": "object",
      "properties": {
        "scientificName": {
          "type": "string",
          "example": "Monstera Deliciosa"
        },
        "commonName": {
          "type": "string",
          "example": "Monstera"
        },
        "category": {
          "type": "string",
          "example": "ornamental"
        },
        "vendor": {
          "type": "string",
          "example": "bunnings"
        },
        "imgUrl": {
          "type": "string",
          "example": "https://source.unsplash.com/random/640Ã—480/?plant,plants,nature"
        },
        "stockQty": {
          "type": "number",
          "example": 10
        },
        "orderQty": {
          "type": "number",
          "example": 1
        },
        "wasteQty": {
          "type": "number",
          "example": 3
        },
        "price": {
          "type": "number",
          "example": 39.99
        }
      }
    },
    "cartEntry": {
      "type": "object",
      "properties": {
        "plantId": {
          "type": "string",
          "example": "640761fc6a186b04e603c1ed"
        },
        "quantity": {
          "type": "number",
          "example": 5
        }
      }
    }
  }
}